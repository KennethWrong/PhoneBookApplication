{"version":3,"sources":["services/personServices.js","components/Notification.js","components/personMapper.js","services/SameName.js","App.js","index.js"],"names":["url","object","axios","get","then","response","data","id","personObject","put","post","delete","Notification","message","condition","status","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","PersonMapper","person","filter","setPersons","persons","setMessage","setStatus","undefined","name","toLowerCase","includes","number","onClick","window","confirm","personService","personer","setTimeout","catch","error","buttonFunction","PersonObject","test","forEach","tempID","line","updatedPerson","map","App","useState","newName","setNewName","newNumber","setNewNumber","setNewFilter","useEffect","initialppl","concat","value","onChange","event","target","onSubmit","preventDefault","valid","done","Namer","newperson","console","log","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5303ed2f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = 'api/persons'\r\n\r\nconst getAll = (object) => {\r\n    const request = axios.get(url)\r\n    return (request.then(response => response.data))\r\n}\r\n\r\nconst update = (id,personObject) => {\r\n    const request = axios.put(`${url}/${id}`,personObject)\r\n    return (request.then(response => response.data))\r\n}\r\n\r\nconst create = (personObject) => {\r\n    const request = axios.post(url,personObject)\r\n    return (request.then(response => response.data))\r\n}\r\n\r\nconst personDelete = (personObject) => {\r\n    const request = axios.delete(`${url}/${personObject.id}`)\r\n    return (request.then(response => response.data))\r\n}\r\n\r\nexport default {getAll,update,create,personDelete}\r\n","\r\nconst Notification = ({message,status}) => {\r\n    const good = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    const bad = {\r\n            color: 'red',\r\n            background: 'lightgrey',\r\n            fontSize: 20,\r\n            borderStyle: 'solid',\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            marginBottom: 10\r\n    }\r\n\r\n    let condition = status? good:bad\r\n\r\n    if(message === null){\r\n        return null\r\n    }\r\n    return (\r\n        <div style = {condition}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import personService from '../services/personServices'\r\nimport Notification from './Notification'\r\n\r\nconst buttonFunction = (person,setPersons,persons,setMessage,setStatus) => {\r\n  const result = window.confirm(`Delete ${person.name} ?`)\r\n  if(result){\r\n  personService.personDelete(person)\r\n  .then(response => {\r\n    setStatus(true)\r\n    setMessage(`${person.name} has been removed sucessfully`)\r\n    setPersons(persons.filter(personer => personer.id !== person.id))\r\n    setTimeout(()=>{\r\n      setMessage(null)\r\n    },5000)\r\n  }).catch(error => {\r\n    setStatus(false)\r\n    setMessage(`Information of ${person.name} has already been deleted`)\r\n    setTimeout(()=>{\r\n      setMessage(null)\r\n    },5000)\r\n  }\r\n  )\r\n}\r\n}\r\n\r\nconst PersonMapper = ({person,filter,setPersons,persons,setMessage,setStatus}) => {\r\n  if(person.name === undefined){\r\n    return null\r\n  }\r\n    if(person.name.toLowerCase().includes(filter.toLowerCase())){\r\n    return(\r\n      <div>\r\n      {person.name} {person.number} \r\n      <button onClick= {() => {buttonFunction(person,setPersons,persons,setMessage,setStatus)}}>\r\n        delete\r\n      </button>\r\n      </div>\r\n    )\r\n    }else{\r\n      return null\r\n    }\r\n  }\r\n\r\nexport default PersonMapper","import personService from './personServices'\r\n\r\nconst sameName = (PersonObject,persons,setPersons) => {\r\n    let test\r\n\r\n    persons.forEach(person => {\r\n        if(person.name !== undefined){\r\n            if(person.name.toLowerCase() === PersonObject.name.toLowerCase()){\r\n                test = person\r\n            }\r\n        }\r\n    })\r\n    \r\n   let tempID = test.id;\r\n\r\n    const line = `${test.name} is already added to\r\n    the phonebook, replce the old number with a new one?`\r\n\r\n    let result = window.confirm(line)\r\n    if(result){\r\n        personService.update(tempID,PersonObject)\r\n        .then( updatedPerson =>\r\n            setPersons(persons.map(person => \r\n                person.id !== tempID ? person:updatedPerson))\r\n        )\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport default {sameName}","import React, { useEffect, useState } from 'react'\nimport PersonMapper from './components/personMapper'\nimport personService from './services/personServices'\nimport Namer from './services/SameName'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([ ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter ] = useState('')\n  const [message, setMessage] = useState('')\n  const [status, setStatus] = useState(true)\n  \n  //inital retrieval of data\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialppl => \n      setPersons(persons.concat(initialppl)))\n  },[])\n\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let sum = 0\n\n    let valid = false\n    let done = false\n\n    const PersonObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    persons.forEach((person) => {\n      if(person.name !== undefined){\n        if(person.name.toLowerCase() === newName.toLowerCase()){\n          valid = true\n        }\n      }})\n\n\n    if(valid){\n        done = Namer.sameName(PersonObject,persons,setPersons)\n    } else{\n      done = true\n    personService\n    .create(PersonObject)\n    .then(newperson => {\n      setPersons(persons.concat(newperson))\n      setNewName('')\n      setNewNumber('')\n    })\n    .catch(error => {\n      console.log(`${error.response.data}`)\n      setStatus(false)\n      setMessage(error.response.data)\n      setTimeout(()=>{\n        setMessage(null)\n      },5000)\n    })\n  } \n  if(done){\n    setStatus(true)\n    setMessage(`${PersonObject.name} has been added`)\n    setTimeout(()=>{\n      setMessage(null)\n    },5000)\n  }\n\n}\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} status={status} />\n      <form> \n        <div>filter shown with: <input value={filter} onChange = {handleFilterChange}/></div>\n        </form>\n\n      <h2> Add a new Contact</h2>\n      <form onSubmit={addPerson}>\n        <div>name: <input value={newName} onChange = {handleNameChange}/></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n        <div><button type=\"submit\">add</button></div>\n        </form>\n      <h2>Numbers</h2>\n      <ul>\n      {persons.map(person => \n        <PersonMapper key={person.id} person={person} filter ={filter} setPersons={setPersons} persons ={persons} setMessage = {setMessage} setStatus={setStatus}/>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}